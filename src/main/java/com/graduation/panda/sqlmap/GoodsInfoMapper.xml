<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.panda.dao.GoodsInfoMapper">
    <resultMap id="BaseResultMap" type="com.graduation.panda.model.GoodsInfo">
        <id column="goods_id" jdbcType="VARCHAR" property="goodsId" />
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
        <result column="market_name" jdbcType="VARCHAR" property="marketName" />
        <result column="purchase_price" jdbcType="VARCHAR" property="purchasePrice" />
        <result column="sell_price" jdbcType="VARCHAR" property="sellPrice" />
        <result column="goods_introduce" jdbcType="VARCHAR" property="goodsIntroduce" />
        <result column="keyword" jdbcType="VARCHAR" property="keyword" />
        <result column="image" jdbcType="VARCHAR" property="image" />
        <result column="sub_images" jdbcType="VARCHAR" property="subImages" />
        <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
        <result column="stock" jdbcType="INTEGER" property="stock" />
    </resultMap>

    <!--默认排序-->
    <select id="findByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') LIMIT 10
    </select>

    <!--按价格升序排列-->
    <select id="findByKeywordPriceAsc" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') order by sell_price asc LIMIT 10
    </select>

    <!--价格降序排列-->
    <select id="findByKeywordPriceDesc" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') order by sell_price desc LIMIT 10
    </select>

    <!--数量-->
    <select id="findByKeywordCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%')
    </select>

    <!--分页查询-->
    <select id="findByKeywordLimit" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') LIMIT #{staNum},10
    </select>

    <!--价格升序分页查询-->
    <select id="findByKeywordPriceAscLimit" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') order by sell_price asc LIMIT #{staNum},10
    </select>
    <!--价格降序分页查询-->
    <select id="findByKeywordPriceDescLimit" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from goods_info
        where keyword LIKE CONCAT(CONCAT('%',#{keyword}),'%') order by sell_price desc LIMIT #{staNum},10
    </select>


    <select id="findGoodsLimit" parameterType="java.util.Map" resultMap="BaseResultMap">
        select *
        from goods_info
        <where>
        <if test="goodsId!=null and goodsId!=''">
            and goods_id = #{goodsId}
        </if>
        </where>
        limit #{pageNum},10
    </select>

    <select id="selectCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1)
        from goods_info
        <where>
            <if test="goodsId!=null and goodsId!=''">
                and goods_id = #{goodsId}
            </if>
        </where>
    </select>

    <delete id="deleteByGoodsId" parameterType="java.lang.String">
        delete from goods_info
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </delete>

    <!--更新用户信息，修改资料与修改密码使用-->
    <update id="updateByPrimaryKey" parameterType="com.graduation.panda.model.SysUser">
        update goods_info
        <set>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="marketName != null">
                market_name = #{marketName,jdbcType=VARCHAR},
            </if>
            <if test="sellPrice != null">
                sell_price = #{sellPrice,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntroduce != null">
                goods_introduce = #{goodsIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="keyword != null">
                keyword = #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>

    <select id="findByGoodsId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from goods_info
        where goods_id = #{goodsId,jdbcType=VARCHAR}
    </select>

    <insert id="insertGoods" parameterType="com.graduation.panda.model.SysUser">
        insert into goods_info (goods_id, goods_name, market_name,
        sell_price, goods_introduce, keyword,image,sub_images,detail,stock)
        values (#{goodsId}, #{goodsName}, #{marketName},
        #{sellPrice}, #{goodsIntroduce}, #{keyword}, #{image}, #{subImages}, #{detail},#{stock})
    </insert>
</mapper>